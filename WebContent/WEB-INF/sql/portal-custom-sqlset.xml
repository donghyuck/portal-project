<?xml version="1.0" encoding="UTF-8"?>
<sqlset>
    <name>PORTAL_CUSTOM</name>
    <version>2.0</version>
    <description>사용자 정의 쿼리...</description>


    <row-mapper name="PODO_MEMBER_ROWMAPPER" class="com.podosoftware.community.list.domain.Member" >		
		<parameterMapping name="id" column="id" javaType="int" />	
		<parameterMapping name="name" column="name" javaType="string" />	
		<parameterMapping name="phone" column="phone" javaType="string" />	
		<parameterMapping name="position" column="position" javaType="string" />	
		<parameterMapping name="gender" column="gender" javaType="string" />		
    </row-mapper>
    
     <row-mapper name="BOARD_ROWMAPPER" class="com.podosoftware.community.board.domain.Board" >		
		<parameterMapping name="boardName" column="boardName" javaType="String" />	
		<parameterMapping name="boardNo" column="boardNo" javaType="long" />	
		<parameterMapping name="writer" column="writer" javaType="string" />	
		<parameterMapping name="writeDate" column="writeDate" javaType="Timestamp" />	
		<parameterMapping name="content" column="content" javaType="string" />
		<parameterMapping name="title" column="title" javaType="string" />
		<parameterMapping name="attachfile" column="attachfile" javaType="string" />
		<parameterMapping name="readCount" column="readCount" javaType="int" />
		<parameterMapping name="writingRef" column="writingRef" javaType="long" />
		<parameterMapping name="writingSeq" column="writingSeq" javaType="long" />
		<parameterMapping name="writingLevel" column="writingLevel" javaType="int" />		
    </row-mapper>

	<sql-query name="SELECT_PODO_MEMBER"
		description="번들 이름에 해당하는 전체 택스트를 조회한다.">
		SELECT * FROM tb_podo_member
    </sql-query>
    
    <sql-query name="SEARCH_PODO_MEMBER"
    	description="이름으로 멤버를 검색한다.">
		SELECT * FROM tb_podo_member WHERE name LIKE '%' || ? || '%'
		
    </sql-query>

    <sql-query name="FIND_PODO_MEMBER"
    	description="멤버를 검색한다.">		
		SELECT * FROM tb_podo_member
		<dynamic><![CDATA[
		<#if FILTER.filters?? && (FILTER.filters?size >0 )  >
		WHERE
			<#list FILTER.filters as item >
			 	<#if item.operator == "eq" >
				${item.field } = '${item.value}'
				<#elseif item.operator == "contains" >
				${item.field } LIKE '%${item.value}%'
				</#if>			
			</#list>		
		</#if>
		]]></dynamic>		
    </sql-query>
    
    <sql-query name="COUNT_PODO_MEMBER"
    	description="멤버를 검색한다.">		
		SELECT count(id) FROM tb_podo_member
		<dynamic><![CDATA[
		<#if FILTER.filters?? && (FILTER.filters?size >0 )  >
		WHERE
			<#list FILTER.filters as item >
			 	<#if item.operator == "eq" >
				${item.field } = '${item.value}'
				<#elseif item.operator == "contains" >
				${item.field } LIKE '%${item.value}%'
				</#if>			
			</#list>		
		</#if>
		]]></dynamic>		
    </sql-query>
    
    
    <sql-query name="UPDATE_PODO_MEMBER"
		description="번들 이름에 해당하는 텍스트를 업데이트한다."><![CDATA[
		UPDATE tb_podo_member 
		SET
			name = ?,
			phone = ?,
			position = ?,
			gender = ?
		WHERE 
			id = ? 
    ]]></sql-query>
    
    <sql-query name="CREATE_PODO_MEMBER"
		description="번들 이름에 해당하는 회원을 추가한다."><![CDATA[
		INSERT INTO tb_podo_member VALUES(?, ?, ?, ?, ?)
    ]]></sql-query>
    
    <sql-query name="SELECT_PODO_MEMBER_IDS"
		description="회원 id만 가져온다."><![CDATA[
		SELECT id FROM tb_podo_member
    ]]></sql-query>
    
    <sql-query name="SELECT_PODO_MEMBER_BY_ID"
		description="회원 id로 정보를 가져온다."><![CDATA[
		SELECT * FROM tb_podo_member WHERE id = ?
    ]]></sql-query>
    
    
<!-- 게시판쿼리  -->    
    <sql-query name="COUNT_BOARD"
    	description="게시판 글의 갯수를 가져온다."><![CDATA[
    	SELECT count(board_no) FROM TB_BOARD
    ]]><dynamic><![CDATA[	
    	<#if boardCode??>    
    	WHERE board_code = '${boardCode}' 
    	</#if>
    	<#if boardName??>
    	AND board_name = '${boardName}'
    	</#if>
    ]]></dynamic></sql-query>
     
     <sql-query name="SELECT_BOARD_NO"
    	description="게시판 번호를 가져온다."><![CDATA[
    	SELECT board_no FROM TB_BOARD  
    ]]><dynamic><![CDATA[	
    	<#if boardCode??>    
    	WHERE board_code = '${boardCode}' 
    	</#if>
    	<#if boardName??>
    	AND board_name = '${boardName}'
    	</#if>
    ]]></dynamic><![CDATA[		
    	ORDER BY writing_ref DESC, writing_seq ASC
    ]]></sql-query>
    
     <sql-query name="SELECT_BOARD_BY_NO"
		description="게시판 번호로 정보를 가져온다."><![CDATA[
		SELECT * FROM TB_BOARD 
	]]><dynamic><![CDATA[
    	<#if boardCode??>    
    	WHERE board_code = '${boardCode}' 
    	</#if>
    	<#if boardName??>
    	AND board_name = '${boardName}'
    	</#if>
    ]]></dynamic>
    	AND board_no = ?
    	ORDER BY writing_ref DESC, writing_seq, writing_level ASC
    </sql-query>
    
	<sql-query name="INSERT_BOARD"
    	description="게시판 새글 등록">	
		INSERT INTO TB_BOARD( 
			board_name, 
			board_no, 
			writer, 
			title, 
			content, 
			read_count, 
			attachfile, 
			write_date, 
			writing_ref, 
			writing_seq, 
			writing_level,
			board_code)
		VALUES (?, ?, ?, ?, ?, 0, ? , SYSDATE, ?, ?, ?, ?)
    </sql-query>
     
     <sql-query name="UPDATE_BOARD"
    	description="게시판 글수정."><![CDATA[		
		UPDATE TB_BOARD 
		SET
			title = ?,
			content = ?,
			attachfile = ?,
			write_date = SYSDATE
		WHERE
			board_code = ?
		AND
			board_no = ? 
     ]]></sql-query>
     
     <sql-query name="DELETE_BOARD"
    	description="게시글 삭제"><![CDATA[		
		DELETE FROM TB_BOARD WHERE 
			board_code = ? AND board_no = ? 
     ]]></sql-query>
    
    <sql-query name="UPDATE_READ_COUNT"
    	description="조회수 1증가"><![CDATA[		
		UPDATE TB_BOARD SET
			read_count = read_count + 1
		WHERE
			board_code = ? AND
			board_no = ?
     ]]></sql-query>
    
     <sql-query name="SELECT_QNA_BOARD_BY_NO"
		description="qna게시판 번호로 정보를 가져온다.">
		SELECT 
			  b.board_code, b.board_name, b.board_no, 
       	 	  b.title, b.writer, b.content, b.write_date,
       		  b.read_count, b.attachfile, b.writing_ref,
       		  b.writing_seq, b.writing_level, q.type, q.category
		FROM  TB_BOARD b, TB_BOARD_QNA q
		WHERE b.board_no = q.board_no
		AND   b.board_code = q.board_code
		AND   b.board_no = ?
		<dynamic><![CDATA[	
		<#if boardCode??>    
    	AND b.board_code = '${boardCode}' 
    	</#if>
    	]]></dynamic>
    	ORDER BY b.writing_ref DESC, b.writing_seq, b.writing_level ASC
   	</sql-query>
    
    <sql-query name="INSERT_QNA_BOARD"
    	description="qna게시판 새글 등록">	
		INSERT INTO TB_BOARD_QNA( 
			type,
			category,
			board_code,
			board_no)
		VALUES (?, ?, ?, ?)
    </sql-query>
    
     <sql-query name="UPDATE_QNA_BOARD"
    	description="게시판 글수정."><![CDATA[		
		UPDATE TB_BOARD_QNA 
		SET
			category = ?
		WHERE
			board_code = ?
		AND
			board_no = ? 
     ]]></sql-query>
     
     <sql-query name="INSERT_BOARD_REPLY"
    	description="게시판 새 답글 등록">	
		INSERT INTO TB_BOARD( 
			board_name, 
			board_no, 
			writer, 
			title, 
			content, 
			read_count, 
			attachfile, 
			write_date, 
			writing_ref, 
			writing_seq, 
			writing_level,
			board_code)
		VALUES (?, ?, ?, ?, ?, 0, ? , SYSDATE, ?, ?, ?, ?)
    </sql-query>
    
    <sql-query name="UPDATE_BOARD_REPLY_SEQ"
    	description="게시판 답변글 seq업데이트"><![CDATA[		
		UPDATE TB_BOARD
		SET
			writing_seq = writing_seq + 1
		WHERE
			writing_ref = ?
		AND
			writing_seq > ?
     ]]></sql-query>
    
    
</sqlset>