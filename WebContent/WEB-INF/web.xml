<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app id="WebApp_ID">
	<display-name>FUSE 2.0</display-name>
	<description>Web application by FUSE 2.0</description>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>WEB-INF/log4j.xml</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>default.webapp.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>120</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/context-config/webApplicationContext.xml</param-value>
	</context-param>

	<!-- ============================================================ -->
	<!-- Servlet Filters 																									   -->
	<!-- ============================================================ -->
	<!-- logging  -->
	<filter>
		<filter-name>logging</filter-name>
		<filter-class>org.springframework.web.filter.CommonsRequestLoggingFilter</filter-class>
		<init-param>
			<param-name>includeClientInfo</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- <init-param> <param-name>includePayload</param-name> <param-value>true</param-value> 
			</init-param> -->
		<init-param>
			<param-name>includeQueryString</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- monitoring  -->
	<filter>
	  <filter-name>RequestURIFilter</filter-name>
	  <filter-class>net.anotheria.moskito.web.filters.RequestURIFilter</filter-class>
	  <init-param>
	    <param-name>limit</param-name>
	    <param-value>1000</param-value>
	  </init-param>
	</filter>
	
	<!-- encoding  -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
		    <param-name>forceEncoding</param-name>
		    <param-value>true</param-value>
		</init-param>			
	</filter>
	<!-- spring security  -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<!-- struts2  -->
	<!-- <filter>
		<filter-name>struts2-prepare</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
	</filter>

	<filter>
		<filter-name>struts2-execute</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
	</filter> -->
	
	<!-- sitemesh  -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
	</filter>

	 
	<filter-mapping> 
		<filter-name>logging</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	 
	<filter-mapping>
	  <filter-name>RequestURIFilter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>	
	
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

<!-- 	<filter-mapping>
		<filter-name>struts2-prepare</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
 -->
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

<!-- 	<filter-mapping>
		<filter-name>struts2-execute</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping> -->

	<!-- ============================================================ -->
	<!-- Servlet Context Listeners (Executed on app startup/shutdown)									   -->
	<!-- ============================================================ -->
	<!-- Cleans up JavaBeans introspection caches on app shutdown, so that the 
		classes and classloaders can be garbage-collected properly -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			architecture.ee.spring.context.WebApplicationContextLoaderListener
		</listener-class>
	</listener>
<!-- 
	<listener>
		<listener-class>org.apache.struts2.dispatcher.ng.listener.StrutsListener</listener-class>
	</listener> -->

	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			net.anotheria.moskito.web.session.SessionByTldListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			net.anotheria.moskito.web.session.SessionCountProducer
		</listener-class>
	</listener>
	
	<!-- ============================================================ -->
	<!-- Servlet																												   -->
	<!-- ============================================================ -->

	<servlet>
		<servlet-name>freemarker-renderer</servlet-name>
		<servlet-class>architecture.ee.web.servlet.FreeMarkerViewRendererServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>remoting</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
<!-- 
	<servlet>
		<servlet-name>download</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
 -->
	<servlet>
		<servlet-name>community</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>
				org.springframework.web.context.support.AnnotationConfigWebApplicationContext
			</param-value>
		</init-param>
			<init-param>
				<param-name>contextConfigLocation</param-name>
				<param-value>		
					architecture.ee.web.community.spring.config.WebCommunityConfig,
					com.podosoftware.competency.spring.config.WebCompetencyAccessmentConfig,
					com.podosoftware.community.spring.config.PodoCommunityConfig
				</param-value>
			</init-param>		
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- Standard Action Servlet Mapping -->
<!-- 
	<servlet-mapping>
		<servlet-name>remoting</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>
 -->
	<servlet-mapping>
		<servlet-name>freemarker-renderer</servlet-name>
		<url-pattern>*.ftl</url-pattern>
	</servlet-mapping>
<!-- 
	<servlet-mapping>
		<servlet-name>download</servlet-name>
		<url-pattern>/download/*</url-pattern>
	</servlet-mapping>
 -->
	<servlet-mapping>
		<servlet-name>community</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	

	<welcome-file-list>
		<welcome-file>/display/main.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>main.do</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/includes/jsp/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>400</error-code>
		<location>/includes/jsp/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/includes/jsp/error.jsp</location>
	</error-page>

</web-app>